<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!--suppress ALL -->
<mapper namespace="cn.gsein.blog.front.mapper.ArticleMapper">
    <resultMap id="articleMap" type="article">
        <id property="id" column="id"/>
        <result property="views" column="views"/>
        <result property="title" column="title"/>
        <result property="digest" column="digest"/>
        <result property="content" column="content"/>
        <result property="publishTime" column="publish_time"/>
        <result property="createTime" column="create_time"/>
        <result property="lastUpdateTime" column="last_update_time"/>
        <result property="status" column="status"/>
        <result property="pictureUrl" column="picture_url"/>
        <association property="author" javaType="user">
            <id property="id" column="u_id"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="avatarUrl" column="avatar_url"/>
            <result property="createTime" column="u_create_time"/>
            <result property="lastUpdateTime" column="u_last_update_time"/>
            <result property="status" column="u_status"/>
        </association>
        <association property="category" javaType="category">
            <id property="id" column="c_id"/>
            <result property="name" column="c_name"/>
            <result property="status" column="c_status"/>
            <result property="createTime" column="c_create_time"/>
            <result property="lastUpdateTime" column="c_last_update_time"/>
        </association>
        <collection property="tags" javaType="list" ofType="tag">
            <id property="id" column="t_id"/>
            <result property="name" column="t_name"/>
            <result property="status" column="t_status"/>
            <result property="createTime" column="t_create_time"/>
            <result property="lastUpdateTime" column="t_last_update_time"/>
        </collection>
    </resultMap>
    <insert id="save" parameterType="article">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO blog_article (id, category_id, views, title, content, user_id, status, picture_url, digest)
        VALUES (#{id}, #{category.id}, 0, #{title}, #{content}, #{author.id}, '0', #{pictureUrl}, #{digest})
    </insert>

    <update id="delete" parameterType="article">
        update blog_article set status='1' where id=#{id} and status='0'
    </update>

    <update id="deleteById" parameterType="string">
        update blog_article set status='1' where id=#{id} and status='0'
    </update>

    <update id="update" parameterType="article">
        update blog_article
        set views=#{views},
        title=#{title},
        content=#{content},
        publish_time=#{publishTime},
        last_update_time=CURRENT_TIMESTAMP,
        category_id=#{category.id},
        user_id=#{author.id},
        picture_url=#{pictureUrl},
        digest=#{digest}
        where id=#{id} and status='0'
    </update>

    <select id="findById" parameterType="string" resultMap="articleMap">
        select a.id, a.title, a.views, a.digest, a.content, a.publish_time, a.create_time, a.last_update_time, a.status, a.picture_url,
        u.id u_id, u.username, u.password, u.avatar_url, u.create_time u_create_time, u.last_update_time u_last_update_time, u.status u_status,
        c.id c_id, c.name c_name, c.status c_status, c.create_time c_create_time, c.last_update_time c_last_update_time,
        t.id t_id, t.name t_name, t.status t_status, t.create_time t_create_time, t.last_update_time t_last_update_time
        from blog_article a
        left join blog_user u on a.user_id = u.id
        left join blog_category c on a.category_id = c.id
        left join (select bat.article_id, bat.tag_id, t.id, t.name, t.status, t.create_time, t.last_update_time from blog_article_tag bat left join blog_tag t on bat.tag_id = t.id) t on a.id = t.article_id
        where a.id = #{id} and a.status = '0'
    </select>

    <select id="findAll" resultMap="articleMap">
        select a.id, a.title, a.views, a.digest, a.content, a.publish_time, a.create_time, a.last_update_time, a.status, a.picture_url,
        u.id u_id, u.username, u.password, u.avatar_url, u.create_time u_create_time, u.last_update_time u_last_update_time, u.status u_status,
        c.id c_id, c.name c_name, c.status c_status, c.create_time c_create_time, c.last_update_time c_last_update_time,
        t.id t_id, t.name t_name, t.status t_status, t.create_time t_create_time, t.last_update_time t_last_update_time
        from blog_article a
        left join blog_user u on a.user_id = u.id
        left join blog_category c on a.category_id = c.id
        left join (select bat.article_id, bat.tag_id, t.id, t.name, t.status, t.create_time, t.last_update_time from blog_article_tag bat left join blog_tag t on bat.tag_id = t.id) t on a.id = t.article_id
        where a.status = '0'
    </select>

    <select id="findTotalCount" resultType="integer">
        select count(*) from blog_article where status='0';
    </select>

    <select id="findByParams" parameterType="map" resultMap="articleMap">
        select a.id, a.title, a.views, a.digest, a.content, a.publish_time, a.create_time, a.last_update_time, a.status,
        a.picture_url,
        u.id u_id, u.username, u.password, u.avatar_url, u.create_time u_create_time, u.last_update_time
        u_last_update_time, u.status u_status,
        c.id c_id, c.name c_name, c.status c_status, c.create_time c_create_time, c.last_update_time c_last_update_time,
        t.id t_id, t.name t_name, t.status t_status, t.create_time t_create_time, t.last_update_time t_last_update_time
        from blog_article a
        left join blog_user u on a.user_id = u.id
        left join blog_category c on a.category_id = c.id
        left join (select bat.article_id, bat.tag_id, t.id, t.name, t.status, t.create_time, t.last_update_time from
        blog_article_tag bat left join blog_tag t on bat.tag_id = t.id) t on a.id = t.article_id
        where a.status='0'
        <if test="title != null and title !=''">
            and title like '%'||#{title}||'%'
        </if>
        <if test="categoryId != null and categoryId != ''">
            and category_id = #{categoryId}
        </if>
        <if test="tagIds != null and tagIds !=''">
            and tag_id in
            <foreach collection="tagIds" item="tagId" open="(" separator="," close=")">
                #{tagId}
            </foreach>
        </if>
    </select>

    <select id="findCountByParams" parameterType="map" resultType="int">
        select count(distinct a.id) from blog_article a
        left join blog_user u on a.user_id = u.id
        left join blog_category c on a.category_id = c.id
        left join (select bat.article_id, bat.tag_id, t.id, t.name, t.status, t.create_time, t.last_update_time from
        blog_article_tag bat left join blog_tag t on bat.tag_id = t.id) t on a.id = t.article_id
        where a.status='0'
        <if test="title != null and title !=''">
            and title like '%'||#{title}||'%'
        </if>
        <if test="categoryId != null and categoryId != ''">
            and category_id = #{categoryId}
        </if>
        <if test="tagIds != null and tagIds !=''">
            and tag_id in
            <foreach collection="tagIds" item="tagId" open="(" separator="," close=")">
                #{tagId}
            </foreach>
        </if>
    </select>

    <insert id="saveArticleTags" parameterType="map">
        insert into blog_article_tag (id, article_id, tag_id) values
        <foreach collection="tagIds" item="tagId" separator=",">
            ((select replace(uuid(),'-','') from dual), #{articleId}, #{tagId})
        </foreach>
    </insert>

    <delete id="deleteArticleTags" parameterType="string">
        DELETE from blog_article_tag where article_id=#{id}
    </delete>

    <select id="findCountByCategoryId" parameterType="string" resultType="int">
        select count(*) from blog_article where category_id = #{categoryId} and status='0'
    </select>

    <select id="findLatestArticleByCategoryId" parameterType="string" resultType="article">
        select * from blog_article where category_id = #{categoryId} and status='0' order by publish_time desc limit 0, 1
    </select>

    <update id="updateCategoryId" parameterType="string">
        update blog_article set category_id = '2301bb6b920b11e7a1249c5c8e6d8f44', last_update_time=CURRENT_TIMESTAMP where category_id = #{categoryId}
    </update>

    <select id="findByCategoryId" parameterType="string" resultMap="articleMap">
        select a.id, a.title, a.views, a.digest, a.content, a.publish_time, a.create_time, a.last_update_time, a.status,
        a.picture_url,
        u.id u_id, u.username, u.password, u.avatar_url, u.create_time u_create_time, u.last_update_time
        u_last_update_time, u.status u_status,
        c.id c_id, c.name c_name, c.status c_status, c.create_time c_create_time, c.last_update_time c_last_update_time,
        t.id t_id, t.name t_name, t.status t_status, t.create_time t_create_time, t.last_update_time t_last_update_time
        from blog_article a
        left join blog_user u on a.user_id = u.id
        left join blog_category c on a.category_id = c.id
        left join (select bat.article_id, bat.tag_id, t.id, t.name, t.status, t.create_time, t.last_update_time from
        blog_article_tag bat left join blog_tag t on bat.tag_id = t.id) t on a.id = t.article_id
        where a.status='0' and category_id = #{categoryId}
    </select>
</mapper>
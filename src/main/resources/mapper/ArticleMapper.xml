<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!--suppress ALL -->
<mapper namespace="cn.gsein.blog.front.mapper.ArticleMapper">
    <resultMap id="articleMap" type="article">
        <id property="id" column="id"/>
        <result property="views" column="views"/>
        <result property="title" column="title"/>
        <result property="digest" column="digest" />
        <result property="content" column="content"/>
        <result property="publishTime" column="publish_time"/>
        <result property="createTime" column="create_time"/>
        <result property="lastUpdateTime" column="last_update_time"/>
        <result property="status" column="status"/>
        <result property="pictureUrl" column="picture_url" />
        <association property="author" javaType="user">
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="avatarUrl" column="avatar_url"/>
            <result property="createTime" column="create_time"/>
            <result property="lastUpdateTime" column="last_update_time"/>
            <result property="status" column="status"/>
        </association>
        <association property="category" javaType="category">

        </association>
        <collection property="tags" javaType="tag">

        </collection>
    </resultMap>
    <insert id="save" parameterType="article">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO blog_article (id, category_id, views, title, content, user_id, status, picture_url, digest)
        VALUES (#{id}, #{category.id}, #{views}, #{title}, #{content}, #{author.id}, '0', #{pictureUrl}, #{digest})
    </insert>

    <update id="delete" parameterType="article">
        update blog_article set status='1' where id=#{id} and status='0'
    </update>

    <update id="deleteById" parameterType="string">
        update blog_article set status='1' where id=#{id} and status='0'
    </update>

    <update id="update" parameterType="article">
        update blog_article
        set views=#{views},
        title=#{title},
        content=#{content},
        publish_time=#{publishTime},
        last_update_time=CURRENT_TIMESTAMP,
        category_id=#{category.id},
        user_id=#{author.id},
        picture_url=#{pictureUrl},
        digest=#{digest}
        where id=#{id} and status='0'
    </update>

    <select id="findById" parameterType="string" resultMap="articleMap">
        select * from blog_article a left join blog_user u
        on a.user_id = u.id
        where a.id=#{id} and a.status='0';
    </select>

    <select id="findAll" resultMap="articleMap">
        select * from blog_article a left join blog_user u
        on a.user_id = u.id
        where a.status='0';
    </select>

    <select id="findTotalCount" resultType="integer">
        select count(*) from blog_article where status='0';
    </select>

    <select id="findByParams" parameterType="map" resultMap="articleMap">
        select * from blog_article a
        left join blog_user u on a.user_id = u.id
        left join blog_category c on a.category_id = c.id
        left join (select bat.article_id, bat.tag_id from blog_article_tag bat left join blog_tag t on bat.tag_id = t.id) t on a.id = t.article_id
        where 1=1
        <if test="title != null and title !=''">
            and title like '%'||#{title}||'%'
        </if>
        <if test="categoryId != null and categoryId != ''">
            and category_id = #{categoryId}
        </if>
        <if test="tagIds != null and tagIds !=''">
            and tag_id in
            <foreach collection="tagIds" item="tagId" open="(" separator="," close=")">
                #{tagId}
            </foreach>
        </if>
    </select>

    <select id="findCountByParams" parameterType="map" resultType="int">
        select count(*) from blog_article a
        left join blog_user u on a.user_id = u.id
        left join blog_category c on a.category_id = c.id
        left join (select bat.article_id, bat.tag_id from blog_article_tag bat left join blog_tag t on bat.tag_id = t.id) t on a.id = t.article_id
        where 1=1
        <if test="title != null and title !=''">
            and title like '%'||#{title}||'%'
        </if>
        <if test="categoryId != null and categoryId != ''">
            and category_id = #{categoryId}
        </if>
        <if test="tagIds != null and tagIds !=''">
            and tag_id in
            <foreach collection="tagIds" item="tagId" open="(" separator="," close=")">
                #{tagId}
            </foreach>
        </if>
    </select>
</mapper>